package booking;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Calendar;
import javax.swing.JOptionPane;
import booking.Rates.HIKE;
import net.sourceforge.jdatepicker.JDatePanel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Sarick
 */
import net.sourceforge.jdatepicker.impl.JDatePanelImpl;
import net.sourceforge.jdatepicker.impl.JDatePickerImpl;
import net.sourceforge.jdatepicker.impl.UtilDateModel;

public class HikeChooser extends javax.swing.JFrame {
	

    // Variables declaration - do not modify             
    private static javax.swing.JComboBox<Integer> comboDuration;
    private static javax.swing.JComboBox<String> comboHikes;
    private javax.swing.JLabel durationofHikeLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private static javax.swing.JTextArea output;
    private javax.swing.JLabel selectATourLabel;
    private javax.swing.JButton btnStartDate;
    private static String selectedHike;    
    private static Integer selectedDuration;
    
//    
//    private net.sourceforge.jdatepicker.impl.UtilCalendarModel utilCalendarModel1;
//    private net.sourceforge.jdatepicker.impl.UtilDateModel utilDateModel1;
    // End of variables declaration     
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HikeChooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HikeChooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HikeChooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HikeChooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HikeChooser().setVisible(true);
            }
        });
    }


    /**
     * Creates new form HikeChooser
     */
    public HikeChooser() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
    	

//        utilCalendarModel1 = new net.sourceforge.jdatepicker.impl.UtilCalendarModel();
//        utilDateModel1 = new net.sourceforge.jdatepicker.impl.UtilDateModel();
        
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();        
        UtilDateModel model = new UtilDateModel();
        Calendar currentDate = Calendar.getInstance();
        model.setDate(currentDate.get(Calendar.YEAR), currentDate.get(Calendar.MONTH), currentDate.get(Calendar.DAY_OF_MONTH));
        model.setSelected(true);
        JDatePanelImpl datePanel = new JDatePanelImpl(model);
        JDatePickerImpl datePicker = new JDatePickerImpl(datePanel);        
        selectATourLabel = new javax.swing.JLabel();
        durationofHikeLabel = new javax.swing.JLabel();        
        comboHikes = new javax.swing.JComboBox<String>();
        comboDuration = new javax.swing.JComboBox<Integer>();
        comboDuration.setModel(new javax.swing.DefaultComboBoxModel<>(new Integer[] {3, 5}));
        selectedDuration = (Integer) comboDuration.getSelectedItem(); // initially set selectedDuration to avoid NPE error

        btnStartDate = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        jLabel1.setText("Beartooth Hiking Company Hiking Tours and Prices");
        
        btnStartDate.addActionListener(new java.awt.event.ActionListener(){
        	 public void actionPerformed(java.awt.event.ActionEvent evt) {
                 BookingDay bookingStart = new BookingDay(model.getYear(), model.getMonth()+1, model.getDay());

                 if (bookingStart.isValidDate()) {
                	// find end date based on selected duration
             		Calendar endDate = Calendar.getInstance();
             		endDate.set(model.getYear(), model.getMonth(), model.getDay());
             		endDate.add(Calendar.DATE, selectedDuration);
             		BookingDay bookingEnd = new BookingDay(endDate.get(Calendar.YEAR), endDate.get(Calendar.MONTH)+1, endDate.get(Calendar.DAY_OF_MONTH));             		
             		
             		Rates rates = new Rates(HIKE.GARDINER);
             		if (selectedHike == "Gardiner Lake"){
            			rates = new Rates(HIKE.GARDINER);         			
            			
            		}            		
            		if (selectedHike == "Hellroaring Plateau"){
            			rates = new Rates(HIKE.HELLROARING);
            		}            		
            		if (selectedHike == "Beaten Path"){
            			rates = new Rates(HIKE.BEATEN);
            		}            		
            		if (bookingEnd.isValidDate()){
            			
            			rates.setBeginDate(bookingStart);
            			rates.setEndDate(bookingEnd);
            			rates.setDuration(selectedDuration);

            			
            			double cost = rates.getCost();
            			output.setText(null);
            			if (cost < 0){
            				JOptionPane.showMessageDialog(null, rates.getDetails(), "Oops!", JOptionPane.INFORMATION_MESSAGE);
            				
            			}  else {
            				output.append("Cost of your selection is $" + cost + " which starts on " + bookingStart + " and goes for " + selectedDuration.toString() + " days. ");
            			}
            		}
                 }
             }
        });
        datePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datePickerActionPerformed(evt);
            }
        });
        selectATourLabel.setText("Please Select a Tour");
        durationofHikeLabel.setText("Duration of Hike (days)");        
        comboHikes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Gardiner Lake", "Hellsroar Pass", "Beaten Path"}));
        comboHikes.addActionListener(new java.awt.event.ActionListener() {
        	@Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {        		
        			selectedHike = (String) comboHikes.getSelectedItem();
        			populateHikeDuration();
            }
        });
        comboDuration.addActionListener(new java.awt.event.ActionListener() {
        	@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
        		selectedDuration = (Integer) comboDuration.getSelectedItem();
        	}
        });


        btnStartDate.setText("Click Here to Enter Start Date");

        output.setColumns(20);
        output.setRows(5);
        jScrollPane2.setViewportView(output);
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(selectATourLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboHikes, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(durationofHikeLabel)
                            .addGap(18, 18, 18)
                            .addComponent(comboDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnStartDate)))
                .addContainerGap(82, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selectATourLabel)
                    .addComponent(comboHikes, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(durationofHikeLabel)
                    .addComponent(comboDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStartDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void datePickerActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          


		


    // Populates the second combobox based on what you selected

	private static void populateHikeDuration() {

		comboDuration.removeAllItems();

		
		selectedHike = (String) comboHikes.getSelectedItem();

		if (selectedHike == "Gardiner Lake"){
			comboDuration.addItem(3);
			comboDuration.addItem(5);
		}
		else if (selectedHike == "Hellsroar Pass"){
			comboDuration.addItem(2);
			comboDuration.addItem(3);
			comboDuration.addItem(4);
		}
		else if (selectedHike == "Beaten Path"){
			comboDuration.addItem(5);
			comboDuration.addItem(7);
			
		}
		else {			
			System.out.println("Invalid selection");
		}
}
          
}
